CUSTOMER:

GET http://localhost:3000/customers => pobiera listę wszystkich klientów

GET http://localhost:3000/customer/CustomerX => pobiera klienta o imieniu CustomerX

DELETE http://localhost:3000/customer/CustomerX => kasuje klienta o imieniu CustomerX

POST http://localhost:3000/customer => dodaje nowego klienta z body requestu
x-www-form-urlencoded
{
name Customer2
email customer2@gmail.com
phone 123456789
address someCustomerAddress
}

PUT http://localhost:3000/customer => update'uje klienta z body requestu
x-www-form-urlencoded
{
name Customer2
address someCustomerAddressUpdated
}


PUT http://localhost:3000/customer/CustomerX => dodaje klientowi ilość loyaltyPoints określoną w body requestu
x-www-form-urlencoded
{
loyaltyPoints 8
}


EMPLOYEE:

GET http://localhost:3000/employees => pobiera listę wszystkich restauracji

GET http://localhost:3000/employee/EmployeeX => pobiera pracownika o nazwisku EmployeeX

DELETE http://localhost:3000/employee/EmployeeX => kasuje pracownika o nazwisku EmployeeX

POST http://localhost:3000/employee => dodaje nowego pracownika z body requestu
x-www-form-urlencoded
{
name Employee4
surname Employee4
position Chef
restaurant 62825d046e2b74b56f5ccc77
}

PUT http://localhost:3000/employee => update'uje pracownika z body requestu
x-www-form-urlencoded
{
surname Employee4
name Employee4 updated
}


MENU ITEM:

GET http://localhost:3000/menuItems => pobiera listę wszystkich pozycji w menu w wersji raw

GET http://localhost:3000/menuItem/Coca_Cola => pobiera pozycję w menu o nazwie Coca_Cola

DELETE http://localhost:3000/menuItem/Coca_Cola => usuwa pozycję w menu o nazwie Coca_Cola

POST http://localhost:3000/menuItem => dodaje nową pozycję w menu z body requestu
application/json
{
  "name": "TestowaPuszka",
  "price": "4",
  "type": "3",
  "description": "BlaBlaBla",
  "products": [
    "6282601eb18137f01f157f6f",
    "6282601eb18137f01f157f6f"
  ]
}

PUT http://localhost:3000/menuItem/TestowaPuszka
application/json
{
    "description": "zmienione BlaBlaBla"
}

GET http:localhost:3000/menu => pobiera menu - uproszczoną listę pozycji w menu (nazwa, cena, opis) pogrupowanych ze względu na typ (kategorię)


ORDER:
TODO

PRODUCT:

GET http://localhost:3000/products => pobiera listę wszystkich produktów w magazynie

GET http://localhost:3000/product/Fanta => pobiera produkt o nazwie Fanta

DELETE http://localhost:3000/product/Fanta => usuwa produkt o nazwie Fanta

POST http://localhost:3000/product => dodaje nowy produkt z body requestu
x-www-form-urlencoded
{
name Red Wine bottle
price 5
quantity 50
}

PUT http://localhost:3000/product/Red_Wine_Bottle => update'uje produkt o nazwie productName z body requestu
x-www-form-urlencoded
{
price 10
}


RESERVATION:

GET http://localhost:3000/reservations => pobiera listę wszystkich rezerwacji

GET http://localhost:3000/reservation/6284c0a1def9ae319af3a571 => pobiera rezerwację o id 6284c0a1def9ae319af3a571'

DELETE http://localhost:3000/reservation/id => usuwa rezerwację o id id

POST http://localhost:3000/reservation/
application/json
{
  "table": "6284ab720b1b925fc9c801fe",
  "startDateTime": "2020-02-01T11:00:00.000Z",
  "endDateTime": "2020-02-01T12:00:00.000Z",
  "customer": "6282601eb18137f01f157f6f"
}

PUT http://localhost:3000/reservation/6284cbc0323bc54e99611585
application/json
{
"endDateTime": "2020-02-01T13:00:00.000Z"
}

GET http://localhost:3000/reservations/table/6284ab720b1b925fc9c801ff => pobiera listę rezerwacji dla stolika 6284ab720b1b925fc9c801ff

GET http://localhost:3000/reservations/customer/62826610ec4736a45905ecae => pobiera listę rezerwacji dla klienta 62826610ec4736a45905ecae


RESTAURANT:
TODO

TABLE:

GET http://localhost:3000/tables => pobiera listę wszystkich stołów

GET http://localhost:3000/table/1 => pobiera stół o nr 1

DELETE http://localhost:3000/table/5 => usuwa stół nr 5

POST http://localhost:3000/table => dodaje nowy stół z body requestu
application/json
{
  "number": 5,
  "seats": 4,
  "status": 1
}

PUT http://localhost:3000/table/4
application/json
{"status":0}


POST http://localhost:3000/tables/free => pobiera listę wolnych stolików dla okresu czasu i ilości osób podanych w body requescie
application/json{
  "startTime": "2012-12-31T22:00:00.000Z",
  "endTime": "2012-12-31T23:00:00.000Z",
  "people": "6"
}

